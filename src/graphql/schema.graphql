# Llamamos los types con el nombre de la entidad. Si es conformado por varias palabras se maneja en camelCase.
# Los querys son usados para realizar consultas.
type Query {
  hello: String
  #Productos
  product(id: ID!): Product
  products: [Product!]!
}

#Los mutations se encargan de modificar el estado o mutar la informacion CRUD
type Mutation {
  addProduct(dto: CreateProductDto): Product
  updateProduct(id: ID, dto: UpdateProductDto!): Product
  deleteProduct(id: ID!): ID
  login(email: String!, password: String!): AuthResponse
}

type Product {
  id: ID!
  name: String!
  price: Float!
  description: String!
  image: String!
  createdAt: String!
  categoryId: ID!
  category: Category!
}

type Category {
  id: ID!
  name: String!
  image: String!
}

type AuthResponse {
  access_token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  role: String!
  createdAt: String!
}

# Pasan a ser nuestros DTOs, es una forma de agrupar varios argumentos
input CreateProductDto {
  name: String!
  description: String!
  image: String!
  price: Int!
  categoryId: ID!
}

input UpdateProductDto {
  name: String
  description: String
  image: String
  price: Int
  categoryId: ID
}
